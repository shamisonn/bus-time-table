{"version":3,"sources":["components/atoms/index.js","components/molecules/index.js","components/organisms/TimeTable.js","Times.js","redux/ActionTypes.js","redux/action.js","components/organisms/InputForm.js","components/App.js","redux/reducer.js","registerServiceWorker.js","index.js"],"names":["Text","_ref","value","react_default","a","createElement","toUpperCase","Select","_ref2","options","onChange","defaultValue","map","o","key","DateTime","_ref3","type","Button","_ref4","onClick","SelectInput","className","title","atoms_Text","atoms_Select","DateInput","defaultDate","atoms_DateTime","places","FromForm","fromHandleChange","molecules_SelectInput","ToForm","toHandleChange","how","HowForm","_ref5","howHandleChange","DateForm","_ref6","dateHandleChange","molecules_DateInput","isVac","IsVacForm","_ref7","isVacHandleChange","ButtonForm","_ref8","onClickButton","atoms_Button","SingleTable","_ref9","times","length","t","connect","state","timeTable","molecules_SingleTable","toUniv","supple","takaska_8to9","normal","takasaka","kitasaka","kumagaya","kounosu","sat","vacation","fromUniv","SET_FROM","SET_TO","SET_HOW","SET_DATE","SET_IS_VAC","UPDATE_TIME_TABLE","setFrom","place","types","setTo","setHow","setDate","date","setIsVac","updateTimeTable","inputs","inputs2times","moment","time","format","dayOfWeek","filterTimes","getTimeTables","from","to","isSat","isVacation","mode","table","i","parseInt","filter","reverse","formState","forms","dispatch","actions","bindActionCreators","Actions","molecules_FromForm","e","target","molecules_ToForm","molecules_HowForm","molecules_DateForm","molecules_IsVacForm","molecules_ButtonForm","App","components_organisms_InputForm","components_organisms_TimeTable","Component","initialFormState","combineReducers","arguments","undefined","action","Object","objectSpread","toString","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","store","createStore","reducer","render","es","src_components_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.806c85ab.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Text = ({value}) => <p>{value.toUpperCase()}</p>;\nText.propTypes = {\n  value: PropTypes.string.isRequired\n};\n\nconst Select = ({options, onChange, defaultValue}) =>\n  <select onChange={onChange} value={defaultValue}>\n    {options.map((o) => <option key={o[0]} value={o[0]}>{o[1]}</option>)}\n  </select>;\nSelect.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)).isRequired,\n  onChange: PropTypes.func.isRequired,\n  defaultValue: PropTypes.string.isRequired\n};\n\nconst DateTime = ({onChange, defaultValue}) =>\n  <input type=\"datetime-local\" onChange={onChange} value={defaultValue}/>;\nDateTime.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  defaultValue: PropTypes.string // date format: is \"YYYY-MM-DDTHH:mm\"\n};\n\nconst Button = ({onClick, value}) =>\n  <button type=\"button\" onClick={onClick}>{value}</button>;\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired\n};\n\nexport {Text, Select, DateTime, Button};\n\n\n\n\n","import React from \"react\";\nimport {Button, DateTime, Select, Text} from \"../atoms\";\n\nimport \"./index.css\"\n\nconst SelectInput = ({className, title, defaultValue, onChange, options}) => {\n  return <div className={className}>\n    <Text value={title}/>\n    <Select defaultValue={defaultValue} onChange={onChange}  options={options}/>\n  </div>\n};\n\nconst DateInput = ({className, title, defaultDate, onChange}) => {\n  return <div className={className}>\n    <Text value={title}/>\n    <DateTime defaultValue={defaultDate} onChange={onChange}/>\n  </div>\n};\n\nconst places = [\n  [\"univ\", \"大学\"],\n  [\"takasaka\", \"高坂\"],\n  [\"kitasaka\", \"北坂戸\"],\n  [\"kumagaya\", \"熊谷\"],\n  [\"kounosu\", \"鴻巣\"]\n];\nconst FromForm = ({defaultValue, fromHandleChange}) => {\n  return <SelectInput\n    className=\"from-input\"\n    title=\"出発地点\"\n    defaultValue={defaultValue}\n    onChange={fromHandleChange}\n    options={places} />\n};\nconst ToForm = ({defaultValue,toHandleChange}) => {\n  return <SelectInput\n    className=\"to-input\"\n    title=\"到着地点\"\n    defaultValue={defaultValue}\n    onChange={toHandleChange}\n    options={places} />\n};\n\nconst how = [\n  [\"departure\", \"出発\"],\n  [\"arrival\",\"到着\"]\n];\nconst HowForm = ({defaultValue, howHandleChange}) => {\n  return <SelectInput\n    className=\"how-input\"\n    title=\"方式\"\n    defaultValue={defaultValue}\n    onChange={howHandleChange}\n    options={how} />\n};\n\nconst DateForm = ({defaultValue, dateHandleChange}) => {\n  return <DateInput\n    className=\"date-input\"\n    title=\"日時\"\n    defaultDate={defaultValue}\n    onChange={dateHandleChange}\n  />\n};\n\nconst isVac =[\n  [\"true\", \"true\"],\n  [\"false\", \"false\"]\n];\n\nconst IsVacForm = ({defaultValue, isVacHandleChange}) => {\n  return <SelectInput\n    className=\"is-vac-input\"\n    title=\"is休業?\"\n    defaultValue={defaultValue}\n    onChange={isVacHandleChange}\n    options={isVac} />\n};\n\nconst ButtonForm = ({onClickButton}) => {\n  return <Button\n    onClick={onClickButton}\n    value=\"送信\"\n  />\n};\n\nconst SingleTable = ({times}) => {\n  if (times.length === 0) {\n    return <div>no entry</div>\n  }\n  return <div><table>\n    <tbody>\n    {times.map(t => <tr key={t}><td>{t}</td></tr>)}\n    </tbody>\n  </table></div>\n};\n\nexport {FromForm, ToForm, HowForm, DateForm, IsVacForm, ButtonForm, SingleTable}\n\n","import React from \"react\";\nimport {connect} from \"react-redux\";\n\nimport {SingleTable} from \"../molecules\";\n\nimport \"./TimeTable.css\"\n\nconst TimeTable = ({times}) => {\n  return <div className=\"time-table\">\n    <SingleTable times={times}/>\n  </div>\n};\n\n// 状態を引っ張ってこれる。connectでつながる。\nconst mapStateToProps = state => {\n  return {times: state.timeTable};\n};\n\nexport default connect(mapStateToProps)(TimeTable)\n","export const toUniv = {\n  \"supple\": {\n    \"takaska_8to9\": \"随時運行\"\n  },\n  \"normal\": {\n    \"takasaka\": [\n      820, 825, 830, 835, 840,\n      910, 915, 925, 934, 941, 949, 956,\n      1006, 1011, 1019, 1025, 1030, 1034, 1040, 1042, 1045, 1048, 1050, 1055, 1058,\n      1104, 1116, 1128, 1135, 1151, 1205, 1221, 1235, 1251, 1255, 1259,\n      1305, 1310, 1315, 1320, 1325, 1328, 1335, 1351,\n      1405, 1421, 1435, 1451, 1459,\n      1505, 1513, 1520, 1528, 1535, 1551,\n      1605, 1621, 1634, 1651,\n      1720, 1735, 1751,\n      1808, 1831\n    ],\n    \"kitasaka\": [\n      807, 831, 855,\n      902, 937,\n      1007, 1032, 1058,\n      1148,\n      1232,\n      1301, 1317,\n      1417, 1447,\n      1539, 1559,\n      1649,\n      1706\n    ],\n    \"kumagaya\": [\n      805, 815, 820,\n      1000, 1010,\n      1230, 1240,\n      1430,\n      1620\n    ],\n    \"kounosu\": [\n      820\n    ]\n  },\n  \"sat\": {\n    \"takasaka\": [\n      840,\n      903, 915, 925, 940, 953,\n      1006, 1021, 1036, 1051,\n      1105, 1135, 1151,\n      1205, 1235, 1251,\n      1305, 1335, 1351,\n      1405, 1435, 1451,\n      1505, 1535, 1551,\n      1636, 1651,\n      1721, 1735,\n      1805\n    ],\n    \"kitasaka\": [\n      837,\n      1017,\n      1147,\n      1217,\n      1447,\n      1514\n    ],\n    \"kumagaya\": [\n      820,\n      1000,\n      1230\n    ],\n    \"kounosu\": []\n  },\n  \"vacation\" : {\n    \"takasaka\":[\n      841, 857,\n      911, 926, 941, 956,\n      1011, 1025, 1036, 1049,\n      1105, 1116, 1135, 1151,\n      1205, 1235, 1251,\n      1305, 1335, 1351,\n      1405, 1435, 1451,\n      1505, 1535, 1551,\n      1605, 1635, 1651,\n      1705, 1721, 1751,\n      1808\n    ],\n    \"kitasaka\":[\n      842,\n      922,\n      1045,\n      1112,\n      1217,\n      1317,\n      1417,\n      1517,\n      1613\n    ],\n    \"kumagaya\":[\n      820,\n      1000,\n      1230\n    ],\n    \"kounosu\":[]\n  }\n};\n\nexport const fromUniv = {\n  \"normal\": {\n    \"takasaka\": [\n      946,\n      1007, 1015, 1031, 1045,\n      1100, 1116, 1122, 1131, 1146,\n      1201, 1216, 1231, 1245, 1247, 1252,\n      1300, 1303, 1307, 1310, 1316, 1322, 1331, 1346,\n      1401, 1416, 1431, 1446, 1452,\n      1503, 1510, 1515, 1525, 1530, 1534, 1540, 1545, 1552,\n      1601, 1617, 1639, 1644, 1656,\n      1710, 1715, 1720, 1725, 1730, 1740, 1753,\n      1807, 1815, 1821, 1837, 1843, 1855,\n      1908, 1920, 1926, 1934, 1955,\n      2008, 2025, 2038, 2045, 2055,\n      2108, 2135\n    ],\n    \"kitasaka\": [\n      1020,\n      1136,\n      1220, 1249,\n      1305,\n      1405, 1435,\n      1527, 1547,\n      1637, 1654,\n      1713, 1727, 1750,\n      1825, 1853,\n      1913, 1945,\n      2031\n    ],\n    \"kumagaya\": [\n      1150,\n      1345,\n      1535,\n      1720, 1725, 1730,\n      1920, 1950,\n      2115\n    ],\n    \"kounosu\": [\n      1837,\n      1920\n    ]\n  },\n  \"sat\": {\n    \"takasaka\": [\n      1003, 1016, 1031, 1046,\n      1116, 1131, 1146,\n      1216, 1231, 1246,\n      1316, 1331, 1346,\n      1416, 1431, 1446,\n      1516, 1531, 1555,\n      1611, 1626, 1649,\n      1711, 1725, 1755,\n      1810, 1825, 1855,\n      1910, 1940,\n      2010, 2037,\n      2107\n    ],\n    \"kitasaka\": [\n      1005,\n      1135,\n      1205,\n      1305,\n      1435,\n      1502,\n      1656,\n      1740,\n      1840\n    ],\n    \"kumagaya\": [\n      1145,\n      1535,\n      1700,\n      1900\n    ],\n    \"kounosu\": []\n  },\n  \"vacation\" : {\n    \"takasaka\":[\n      946,\n      1015,1022,1031,1046,\n      1101,1116,1131,1146,\n      1216,1231,1246,\n      1316,1331,1346,\n      1416,1431,1446,\n      1516,1534,1545,\n      1609,1631,1644,1655,\n      1708,1726,1740,1753,\n      1807,1826,1837,1855,\n      1908,1926,1939,1955,\n      2008,2025,2038,\n      2108\n    ],\n    \"kitasaka\":[\n      1033,\n      1100,\n      1205,\n      1305,\n      1405,\n      1505,\n      1601,\n      1738\n    ],\n    \"kumagaya\":[\n      1145,\n      1520,\n      1700,\n      1900\n    ],\n    \"kounosu\":[]\n  }\n};","export const SET_FROM = \"SET_FROM\";\nexport const SET_TO = \"SET_TO\";\nexport const SET_HOW = \"SET_HOW\";\nexport const SET_DATE = \"SET_DATE\";\nexport const SET_IS_VAC = \"SET_IS_VAC\";\nexport const UPDATE_TIME_TABLE = \"UPDATE_TIME_TABLE\";","import * as times from \"../Times\";\nimport moment from \"moment\";\n\nimport * as types from \"./ActionTypes\";\n\nexport const setFrom = place => ({\n  type: types.SET_FROM,\n  place\n});\n\nexport const setTo = place => ({\n  type: types.SET_TO,\n  place\n});\n\nexport const setHow = how => ({\n  type: types.SET_HOW,\n  how\n});\n\nexport const setDate = date => ({\n  type: types.SET_DATE,\n  date\n});\n\nexport const setIsVac = isVac => ({\n  type: types.SET_IS_VAC,\n  isVac\n});\n\n// buttonが押されたときに行う\nexport const updateTimeTable = inputs => ({\n  type: types.UPDATE_TIME_TABLE,\n  times: inputs2times(inputs)\n});\n\nconst inputs2times = (inputs) => {\n  const date = moment(inputs.date);\n  const time = date.format(\"HHmm\");\n  const dayOfWeek = date.format(\"dddd\");\n\n  // 休業中の処理\n  if (inputs.isVac === \"true\") {\n    if(dayOfWeek === \"Sunday\" || dayOfWeek === \"Saturday\") {\n      return [\"土日曜は川越観光使うしかないです。\"]\n    } else {\n      return filterTimes(\n        getTimeTables(inputs.from, inputs.to, false, true),\n        time,\n        inputs.how\n      )\n    }\n  }\n  // 曜日を判定する\n  if(dayOfWeek === \"Sunday\") {\n    return [\"日曜は川越観光使うしかないです。\"]\n  } else if (dayOfWeek === \"Saturday\"){\n    // 土曜の日程\n    return filterTimes(\n      getTimeTables(inputs.from, inputs.to, true, false),\n      time,\n      inputs.how\n    )\n  }\n  // 通常運行日程\n  return filterTimes(\n    getTimeTables(inputs.from, inputs.to, false, false),\n    time,\n    inputs.how\n  );\n\n  // 時刻表JSONから指定の時刻表を取ってくる\n  function getTimeTables(from, to, isSat, isVacation) {\n    const mode = isSat ? \"sat\" : isVacation ? \"vacation\" : \"normal\";\n    if (from === \"univ\") {\n      return times.fromUniv[mode][to];\n    } else {\n      return times.toUniv[mode][from];\n    }\n  }\n\n  // 出発と到着に合わせてデータ量を変更\n  function filterTimes(table, time, how) {\n    const i = parseInt(time, 10);\n    if (how === \"departure\") { // 出発\n      return table.filter(t => i < t);\n    } else if (how === \"arrival\"){ // 到着\n      return table.filter(t => i > t).reverse();\n    }\n    return [];\n  }\n};\n\n\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\n\nimport * as Actions from \"../../redux/action\";\nimport {ButtonForm, DateForm, FromForm, HowForm, IsVacForm, ToForm} from \"../molecules\";\n\nimport './InputForm.css';\n\nconst InputForm = ({formState, actions}) => {\n  return  <div className=\"input-form\">\n    <FromForm defaultValue={formState.from} fromHandleChange={e => actions.setFrom(e.target.value) }/>\n    <ToForm defaultValue={formState.to} toHandleChange={e => actions.setTo(e.target.value) }/>\n    <HowForm defaultValue={formState.how} howHandleChange={e => actions.setHow(e.target.value)}/>\n    <DateForm defaultValue={formState.date} dateHandleChange={e => actions.setDate(e.target.value) }/>\n    <IsVacForm defaultValue={formState.isVac} isVacHandleChange={e => actions.setIsVac(e.target.value) } />\n    <ButtonForm onClickButton={() => actions.updateTimeTable(formState)}/>\n  </div>\n};\n\n// 状態を引っ張ってこれる。connectでつながる。\n// 今回はformsを持ってくる。これはreducerでexportしているやつ。\nconst mapStateToProps = state => {\n  return {formState: state.forms};\n};\n\n// actionの関数を使えるようにする。\n// actionの実際の挙動はreducerが行うが、\n// componentが行うことは typeと値を渡してやること。\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(Actions, dispatch)\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(InputForm);\n","import React, { Component } from \"react\";\nimport './App.css';\n\nimport TimeTable from \"./organisms/TimeTable\"\nimport InputForm from \"./organisms/InputForm\";\n\n// entry point\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <InputForm/>\n        <TimeTable/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import moment from \"moment\";\n\nimport * as types from \"./ActionTypes\";\nimport {combineReducers} from \"redux\";\n\n/* actionとstateを受け取って、stateを更新する処理をする */\nconst initialFormState = {\n  from: \"kitasaka\",\n  to: \"univ\",\n  how: \"departure\",\n  date: moment().format(\"YYYY-MM-DDTHH:mm\"),\n  isVac: \"false\"\n};\nfunction forms(state = initialFormState, action) {\n  switch(action.type) {\n    case types.SET_FROM:\n      // fromをunivに変更したい場合\n      if (action.place === \"univ\") {\n        // fromがunivでない場合\n        if (state.from !== \"univ\") {\n          const place = state.from;\n          return {\n            ...state,\n            from: \"univ\",\n            to: place\n          };\n        }\n        // else {\n        // stateの変更は必要ない。\n        //}\n        return state;\n      } else {\n        // fromをuniv以外に変更したい場合\n        return {\n          ...state,\n          from: action.place,\n          to: \"univ\"\n        };\n      }\n    case types.SET_TO:\n      if (action.place === \"univ\") {\n        if (state.to !== \"univ\") {\n          const place = state.to;\n          return {\n            ...state,\n            from: place,\n            to: \"univ\"\n          };\n        }\n        return state;\n      } else {\n        return {\n          ...state,\n          from: \"univ\",\n          to: action.place\n        };\n      }\n\n    case types.SET_HOW:\n      return {\n        ...state,\n        how: action.how\n      };\n    case types.SET_DATE:\n      return {\n        ...state,\n        date: moment(action.date).format(\"YYYY-MM-DDTHH:mm\")\n      };\n    case types.SET_IS_VAC:\n      return {\n        ...state,\n        isVac: action.isVac.toString()\n      };\n    default:\n      return state;\n  }\n}\n\nfunction timeTable(state = [], action) {\n  switch(action.type) {\n    case types.UPDATE_TIME_TABLE:\n      return action.times;\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  forms,\n  timeTable\n})\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/sw.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\n\nimport App from './components/App';\nimport reducer from './redux/reducer'\nimport registerServiceWorker from './registerServiceWorker';\n\nimport './index.css';\n\nconst store = createStore(reducer);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}